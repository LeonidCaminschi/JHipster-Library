package com.esempla.library.domain;

import static com.esempla.library.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class BorrowedBookAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBorrowedBookAllPropertiesEquals(BorrowedBook expected, BorrowedBook actual) {
        assertBorrowedBookAutoGeneratedPropertiesEquals(expected, actual);
        assertBorrowedBookAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBorrowedBookAllUpdatablePropertiesEquals(BorrowedBook expected, BorrowedBook actual) {
        assertBorrowedBookUpdatableFieldsEquals(expected, actual);
        assertBorrowedBookUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBorrowedBookAutoGeneratedPropertiesEquals(BorrowedBook expected, BorrowedBook actual) {
        assertThat(actual)
            .as("Verify BorrowedBook auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBorrowedBookUpdatableFieldsEquals(BorrowedBook expected, BorrowedBook actual) {
        assertThat(actual)
            .as("Verify BorrowedBook relevant properties")
            .satisfies(a ->
                assertThat(a.getBorrowDate())
                    .as("check borrowDate")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(expected.getBorrowDate())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBorrowedBookUpdatableRelationshipsEquals(BorrowedBook expected, BorrowedBook actual) {
        assertThat(actual)
            .as("Verify BorrowedBook relationships")
            .satisfies(a -> assertThat(a.getBook()).as("check book").isEqualTo(expected.getBook()))
            .satisfies(a -> assertThat(a.getClient()).as("check client").isEqualTo(expected.getClient()));
    }
}
